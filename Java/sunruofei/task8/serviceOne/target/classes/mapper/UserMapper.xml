<?xml version="1.0" encoding="UTF-8" ?>
<!--映射文件，mapper.xml在mybatis.xml是专职处理sql的一个环节，各种映射和实现都在这里处理-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
例如namespace="me.gacl.mapping.userMapper"就是me.gacl.mapping(包名)+userMapper(userMapper.xml文件去除后缀)
-->
<mapper namespace="com.ptteng.dao.UserMapper">
    <!-- 在select标签中编写查询的SQL语句， 设置select标签的id属性为getUser，id属性值必须是唯一的，不能够重复
    使用parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型
    resultType="me.gacl.domain.User"就表示将查询结果封装成一个User类的对象返回
    User类就是test表所对应的实体类
    -->
    <!--映射Dao接口里的方法,替代了实现类的作用-->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.ptteng.model.User">
        insert into user (name,password ,phone,mail) VALUES (#{name},#{password},#{phone},#{mail})
    </insert>
    <select id="selectByName" resultType="com.ptteng.model.User">
        select name from user where name = #{name}
    </select>
    <select id="selectByCondition" resultType="com.ptteng.model.User" parameterType="com.ptteng.model.User">
        select id from user where name = #{name} and password = #{password}
    </select>

    <select id="selectById" resultType="com.ptteng.model.User" parameterType="com.ptteng.model.User">
            select * from user where id = #{id}
    </select>

    <select id="selectCodePhone" parameterType="com.ptteng.model.User" resultType="com.ptteng.model.User">
        select code,phone from note where phone = #{phone} and code = #{code}
    </select>
    <select id="selectCodeMail" parameterType="com.ptteng.model.User" resultType="com.ptteng.model.User">
        select code,mail_address from mail where mail_address = #{mail} and code = #{code}
    </select>

    <insert id="insertMail" parameterType="com.ptteng.model.User">
        insert into user (name,password ,mail,phone) VALUES (#{name},#{password},#{mail},#{phone})
    </insert>
</mapper>